pipeline {
    agent any
    environment {
        // Test_Server is the local test machine.
        Test_Server = "robotics-testNUC11"
        Test_WORKSPACE = "/home/intel/ros2_openvino_toolkit_test"
    }
    stages {
        stage('Get The env') {
            steps {
                script {
                    // rm the old env
                    sh script: "ssh intel@$Test_Server 'rm -rf $Test_WORKSPACE/env'", returnStatus: true
                    // get new env
                    sh script: "export | tee -a env", returnStatus: true
                    sh script: "scp -r env intel@$Test_Server:$Test_WORKSPACE", returnStatus: true
                }
            }
        }
        stage('Moving The Code To Test Machine') {
            steps {
                script {
                    sh script: "ssh intel@$Test_Server 'rm -rf $Test_WORKSPACE/ros2_openvino_toolkit'", returnStatus: true
                    sh script: "scp -r $WORKSPACE intel@$Test_Server:$Test_WORKSPACE/ros2_openvino_toolkit", returnStatus: true
                    // sh script: "ssh intel@$Test_Server 'docker cp $Test_WORKSPACE/ros2_openvino_toolkit:/root/catkin_ws/src'", returnStatus: true
                }
            }
        }
        stage('Klocwork Code check') {
            steps {
                script {
                    echo 'klocwork code check'
                    sh script: "sudo docker cp $WORKSPACE klocwork_test:/home/intel/catkin_ws/src/ros2_openvino_toolkit", returnStatus: true
                    sh script: "sudo docker exec -i klocwork_test bash -c 'source ~/.bashrc && cd catkin_ws && ./klocwork_scan.sh'", returnStatus: true
                }

            }
        }
        stage('The Ros2_openvino container run') {
            steps {
                script {
                    def test_result = sh script: "ssh intel@$Test_Server 'cd $Test_WORKSPACE && ./self_container_ros2_openvino_test.sh '", returnStatus: true
                    if (test_result == 0) {
                        echo "test pass"
                    } else {
                        echo "test fail"
                        exit -1
                    }

                }

            }
        }
    }

}
